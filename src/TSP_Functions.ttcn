module TSP_Functions {

    import from TSP_Types all;
    import from TSP_PortType all;

    //function f_setup_sfc(charstring service_name) runs on MANO {
    //  Port.send( service_name );
    //}

    function f_create_starting_parameter_config(template TSP_Experiment spe) return template ParameterConfigurations {
        var template ParameterConfigurations rcfgs := {};

        for(var integer i := 0; i < sizeof(spe.paramcfgs); i := i + 1) {
            // Main parameter configs
            var integer vcpus := valueof(spe.paramcfgs[i].vcpus[0]);
            var integer memory := valueof(spe.paramcfgs[i].memory[0]);
            var integer storage := valueof(spe.paramcfgs[i].storage[0]);

            // Additional parameter configs
            var template ParameterValues additional_param_values := {};
            if(isbound(spe.paramcfgs[i].additional_parameters)) {
                for(var integer j := 0; j < sizeof(spe.paramcfgs[i].additional_parameters); j := j + 1) {
                    template ParameterDef additional_parameter := spe.paramcfgs[i].additional_parameters[j];
                    select union (valueof(additional_parameter.parameter)) {
                        case (macro) { additional_param_values[j] := { name := additional_parameter.name, 
                                        input := float2str(valueof(additional_parameter.parameter.macro.min)) };
                                     }
                        case (list) { additional_param_values[j] := { name := additional_parameter.name,
                                        input := int2str(valueof(additional_parameter.parameter.list[0])) };
                                    }
                    }
                }
            }
            
            var integer next_item := sizeof(rcfgs);
            rcfgs[next_item] := { function_id := valueof(spe.paramcfgs[i].function_id),
                                  vcpus := vcpus,
                                  memory := memory,
                                  storage := storage,
                                  additional_parameters := additional_param_values
                              };
        }

        log("Created the following starting template: ", rcfgs);

        return rcfgs;
    }

    function f_increment_parameter_config(inout template ParameterConfigurations paramcfgs, template TSP_Experiment spe, var integer index_current_param, var integer index_add_param) {
        select union(valueof(spe.paramcfgs[current_param].additional_parameters[index_add_param])) {
            case (macro) {
                log("Incrementing %s by %s", paramcfgs[current_param].additional_parameters[index_add_param].name, valueof(spe.paramcfgs[current_param].additional_parameters[index_add_param].parameter.macro.step)
                paramcfgs[current_param].additional_parameters[index_add_param].input := float2str(str2float(valueof(paramcfgs[current_param].additional_parameters[index_add_param].input)) + valueof(spe.paramcfgs[current_param].additional_parameters[index_add_param].parameter.macro.step));
            }
            case (list) {
                //paramcfgs[current_param].additional_parameters[l].input :=
            }
        }
    }

}

